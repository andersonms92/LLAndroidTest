// Generated by Dagger (https://dagger.dev).
package com.llandroidtest.data.di;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import okhttp3.Cache;
import okhttp3.OkHttpClient;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class NetworkModule_ProvideOkHttpClientFactory implements Factory<OkHttpClient> {
  private final Provider<Cache> cacheProvider;

  private final Provider<Context> contextProvider;

  public NetworkModule_ProvideOkHttpClientFactory(Provider<Cache> cacheProvider,
      Provider<Context> contextProvider) {
    this.cacheProvider = cacheProvider;
    this.contextProvider = contextProvider;
  }

  @Override
  public OkHttpClient get() {
    return provideOkHttpClient(cacheProvider.get(), contextProvider.get());
  }

  public static NetworkModule_ProvideOkHttpClientFactory create(Provider<Cache> cacheProvider,
      Provider<Context> contextProvider) {
    return new NetworkModule_ProvideOkHttpClientFactory(cacheProvider, contextProvider);
  }

  public static OkHttpClient provideOkHttpClient(Cache cache, Context context) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideOkHttpClient(cache, context));
  }
}
