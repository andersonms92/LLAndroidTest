// Generated by Dagger (https://dagger.dev).
package com.llandroidtest.data.di;

import com.llandroidtest.data.remote.GithubApi;
import com.llandroidtest.data.repository.GithubRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class GithubModule_ProvideGithubRepositoryFactory implements Factory<GithubRepository> {
  private final Provider<GithubApi> githubApiProvider;

  public GithubModule_ProvideGithubRepositoryFactory(Provider<GithubApi> githubApiProvider) {
    this.githubApiProvider = githubApiProvider;
  }

  @Override
  public GithubRepository get() {
    return provideGithubRepository(githubApiProvider.get());
  }

  public static GithubModule_ProvideGithubRepositoryFactory create(
      Provider<GithubApi> githubApiProvider) {
    return new GithubModule_ProvideGithubRepositoryFactory(githubApiProvider);
  }

  public static GithubRepository provideGithubRepository(GithubApi githubApi) {
    return Preconditions.checkNotNullFromProvides(GithubModule.INSTANCE.provideGithubRepository(githubApi));
  }
}
